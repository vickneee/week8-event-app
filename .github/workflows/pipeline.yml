name: Deployment Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches: [main]
    types: [opened, synchronize]

jobs:
  # This job will run on both 'push' and 'pull_request' events
  simple_pipeline:
    name: Simple pipeline
    runs-on: ubuntu-latest

    # This section starts a MongoDB service
    services:
      mongodb:
        image: mongo:4.2
        ports:
          - 27017:27017
        options: >
          --health-cmd "echo 'db.runCommand({ping: 1})' | mongo localhost:27017/test --quiet" --health-interval 10s --health-timeout 5s --health-retries 5

    outputs:
      result: ${{ steps.test-step.outcome }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Node setup
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install Dependencies
        run: npm install
        working-directory: ./backend

      # - name: Check style
        # run: npm run eslint

      - name: Test
        id: test-step
        env:
          NODE_ENV: test
          MONGO_URI_TEST: mongodb://localhost:27017/TEST-events
        run: npm test
        working-directory: ./backend

      - name: Build for Deploy
        run: deploy
        working-directory: ./backend

  tag_and_deploy:
    # This job will run only on 'push'
    name: Tag and Deploy
    runs-on: ubuntu-latest
    needs: [ simple_pipeline ]
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, '[skip tag]' ) }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'

      - name: Update version number
        uses: anothrNick/github-tag-action@1.75.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch

      - name: Deploy to Render
        run: curl https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }}?key=${{ secrets.RENDER_API_KEY }}

  # notification:
    # name: Notify on Status
    # runs-on: ubuntu-latest
    # needs: [ simple_pipeline, tag_and_deploy ]
    # if: ${{ always() }}

    # steps:
      # - name: Deployment Successful
        # uses: sebastianpopp/discord-action@releases/v2
        # if: ${{ needs.simple_pipeline.result == 'success' && needs.tag_and_deploy.result == 'success' }}
        # with:
          # webhook: ${{ secrets.DISCORD_WEBHOOK }}
          # message: ${{ github.repository }} All tests passed! Deployment Successful!

      # - name: Deployment Failed
        # uses: sebastianpopp/discord-action@releases/v2
        # if: ${{ needs.simple_pipeline.result == 'failure' || needs.tag_and_deploy.result == 'failure' }}
        # with:
          # webhook: ${{ secrets.DISCORD_WEBHOOK }}
          # message: ${{ github.repository }} Deployment Failure!
